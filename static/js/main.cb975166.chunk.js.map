{"version":3,"sources":["Components/Task02/AddTableCard.js","Components/Task02/AddSegment.js","Components/Task02/AddSegmentCard.js","Components/Task02/MainEvevnt.js","Components/NaveBar/navBar.js","Components/LandingPage.js","App.js","reportWebVitals.js","index.js","Components/NaveBar/news.module.css"],"names":["AddTableCard","props","useState","name","setName","icon","setIcon","color","setColor","className","onClick","hidshow","htmlFor","type","placeholder","value","required","onChange","e","target","initialValue","cleanOnEnter","id","disabled","addItemFunc","AddSegment","addSegmentItems","map","item","index","onchgFunction","AddSegmentCard","segmentname","setSegementName","segmenticon","setSegementIcon","description","setDescription","addSegmentItemFunc","dummy","dummySegment","MainEvevnt","addTabel","setAddTable","addSegment","setAddSegment","addItems","setAddItems","setAddSegmentItems","style","borderColor","items","oldValues","isSegment","Menu","mystyles","naveContainer","to","links","searchInput","searchBtn","exact","path","component","MainEvent","React","Component","LandingPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cb975166.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./addTabel.css\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nconst AddTableCard = (props) => {\r\n  //Table State\r\n  const [name, setName] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"😏\");\r\n  const [color, setColor] = useState(\"#ff0000\");\r\n\r\n  //for add new table item\r\n  const addNewItems = () => {\r\n    props.addItemFunc({\r\n      name: name,\r\n      icon: icon,\r\n      color: color,\r\n    });\r\n    props.hidshow();\r\n  };\r\n\r\n  return (\r\n    <div className=\"mainTabelBox\">\r\n      <div className=\"formHeader\">\r\n        <h4>Add a Table</h4>\r\n        <button className=\"closebtn\" onClick={props.hidshow}>\r\n          x\r\n        </button>\r\n      </div>\r\n      <div className=\"formContainer\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"nameInputs\"\r\n          placeholder=\"Enter Name here..\"\r\n          value={name}\r\n          required=\"required\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <label htmlFor=\"icon\">Icon</label>\r\n        <InputEmoji\r\n          initialValue={icon}\r\n          onChange={setIcon}\r\n          cleanOnEnter\r\n          placeholder=\"Choose Icon..\"\r\n        />\r\n\r\n        <label htmlFor=\"color\">Color</label>\r\n        <input\r\n          type=\"color\"\r\n          value={color}\r\n          onChange={(e) => {\r\n            setColor(e.target.value);\r\n          }}\r\n          className=\"colorInput\"\r\n          id=\"\"\r\n        />\r\n        {/* <CirclePicker /> */}\r\n      </div>\r\n      <div className=\"btnsection\">\r\n        <button disabled={!name} className=\"addTablebtn\" onClick={addNewItems}>\r\n          Add\r\n        </button>\r\n\r\n        <button className=\"cancelTablebtn\" onClick={props.hidshow}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTableCard;\r\n","import React from 'react';\r\nimport './segment.css'\r\n\r\nconst AddSegment = (props) => {\r\n    return (\r\n        <div className=\"sideBar\">\r\n        <div className=\"segmentMain\">\r\n        <div className=\"segmentHeader\">\r\n            <h2>Prospectors</h2>\r\n        </div>\r\n            <input type=\"text\" className=\"addsegemntInput\" placeholder=\"Add segments here..\" name=\"\" id=\"\"/>\r\n            <span className=\"segmentTilte\">Segments</span>\r\n            <ul className=\"segmentList\">\r\n            {\r\n                props.addSegmentItems.map((item,index)=>{\r\n                    return <li key={index}><span>{item.icon}</span>{item.name}</li>\r\n                })\r\n            }\r\n               \r\n               \r\n            </ul>\r\n        </div>\r\n        <div>\r\n            <button className=\"addSegBtn\" onClick={props.onchgFunction}> +  Add a segments</button>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default AddSegment;","import React,{useState} from \"react\";\r\nimport \"./addTabel.css\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nconst AddSegmentCard = (props) => {\r\n  //Segments State\r\n  const [segmentname, setSegementName] = useState(\"\");\r\n  const [segmenticon, setSegementIcon] = useState(\"😏\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  //for add new segment item\r\n  const addNewSegments = () => {\r\n    props.addSegmentItemFunc({\r\n      name: segmentname,\r\n      icon: segmenticon,\r\n      description: description,\r\n    });\r\n    props.hidshow();\r\n  };\r\n  return (\r\n    <div className=\"mainTabelBox\">\r\n      <div className=\"formHeader\">\r\n        <h4>Add a Segment</h4>\r\n        <button className=\"closebtn\" onClick={props.hidshow}>\r\n          x\r\n        </button>\r\n      </div>\r\n      <div className=\"formContainer\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"nameInputs\"\r\n          placeholder=\"Enter Name here..\"\r\n          value={segmentname}\r\n          required=\"required\"\r\n          onChange={(e) => {\r\n            setSegementName(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <label htmlFor=\"name\">Icon</label>\r\n        <InputEmoji\r\n          initialValue={segmenticon}\r\n          onChange={setSegementIcon}\r\n          cleanOnEnter\r\n          placeholder=\"Choose Icon..\"\r\n        />\r\n\r\n        <label htmlFor=\"name\">Discription</label>\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => {\r\n            setDescription(e.target.value);\r\n          }}\r\n          name=\"\"\r\n          id=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"btnsection\">\r\n        <button\r\n          disabled={!segmentname}\r\n          className=\"addTablebtn\"\r\n          onClick={addNewSegments}\r\n        >\r\n          Save\r\n        </button>\r\n        <button className=\"cancelTablebtn\" onClick={props.hidshow}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSegmentCard;\r\n","import React, { useState } from \"react\";\r\nimport AddTableCard from \"./AddTableCard\";\r\nimport \"./mainEvent.css\";\r\nimport AddSegment from \"./AddSegment\";\r\nimport AddSegmentCard from \"./AddSegmentCard\";\r\n\r\nconst dummy = [\r\n  {\r\n    name: \"Mubasheer\",\r\n    icon: \"😏\",\r\n    color: \"red\",\r\n  },\r\n];\r\nconst dummySegment = [\r\n  {\r\n    name: \"Segment1\",\r\n    icon: \"😏\",\r\n    description: \"\",\r\n    dummy: [\r\n      {\r\n        name: \"Mubasheer\",\r\n        icon: \"😏\",\r\n        color: \"red\",\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst MainEvevnt = () => {\r\n  const [addTabel, setAddTable] = useState(false);\r\n  const [addSegment, setAddSegment] = useState(false);\r\n  const [addItems, setAddItems] = useState(dummy);\r\n  const [addSegmentItems, setAddSegmentItems] = useState(dummySegment);\r\n\r\n  const addItemFunc = (items) => {\r\n    setAddItems((oldValues) => {\r\n      return [...oldValues, items];\r\n    });\r\n  };\r\n\r\n  const addSegmentItemFunc = (items) => {\r\n    setAddSegmentItems((oldValues) => {\r\n      return [...oldValues, items];\r\n    });\r\n  };\r\n  const hidshow = () => {\r\n    setAddTable(!addTabel);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"mainContainer\">\r\n        <AddSegment\r\n          addSegmentItems={addSegmentItems}\r\n          onchgFunction={() => {\r\n            setAddSegment(!addSegment);\r\n          }}\r\n        />\r\n        <div className=\"rightBarSection\">\r\n          <div></div>\r\n          <ul className=\"addList\">\r\n            {addItems.map((item, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <p style={{ borderColor: item.color }}>{item.icon}</p>\r\n                  <small>{item.name}</small>\r\n                </li>\r\n              );\r\n            })}\r\n\r\n            <li>\r\n              <input\r\n                className=\"addbtn\"\r\n                type=\"button\"\r\n                value=\"+\"\r\n                onClick={hidshow}\r\n              />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {addTabel && (\r\n          <AddTableCard addItemFunc={addItemFunc} hidshow={hidshow} />\r\n        )}\r\n        {addSegment && (\r\n          <AddSegmentCard\r\n            isSegment=\"true\"\r\n            addSegmentItemFunc={addSegmentItemFunc}\r\n            hidshow={setAddSegment}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainEvevnt;\r\n","import React from \"react\";\r\nimport mystyles from \"./news.module.css\";\r\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nimport MainEvent from \"../Task02/MainEvevnt\";\r\n\r\nclass Menu extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={mystyles.naveContainer}>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/MainEvent\" className={mystyles.links}>\r\n                MainEvent\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div>\r\n            <input type=\"text\" className={mystyles.searchInput} />\r\n            <input\r\n              type=\"button\"\r\n              className={mystyles.searchBtn}\r\n              value=\"Search\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <Switch>\r\n          <Route exact path=\"/MainEvent\" component={MainEvent} />\r\n          <Route exact path=\"/\" component={MainEvent} />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport Menu from '../Components/NaveBar/navBar';\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Menu />\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import \"./App.css\";\nimport LandingPage from \"./Components/LandingPage\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <LandingPage />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"naveContainer\":\"news_naveContainer__3oIco\",\"links\":\"news_links__2C04T\",\"searchBtn\":\"news_searchBtn__3GUnC\",\"searchInput\":\"news_searchInput__3bXLw\",\"newsContainer\":\"news_newsContainer__6npBj\",\"newsCard\":\"news_newsCard__3psXe\"};"],"sourceRoot":""}